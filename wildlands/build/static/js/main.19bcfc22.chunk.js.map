{"version":3,"sources":["Table.js","App.js","serviceWorker.js","index.js"],"names":["desc","a","b","orderBy","EnhancedTableHead","props","classes","order","onRequestSort","TableHead","TableRow","headCells","map","headCell","TableCell","key","id","align","numeric","padding","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useStyles","makeStyles","theme","root","width","marginTop","spacing","paper","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","height","margin","overflow","position","top","EnhancedTable","rows","React","useState","setOrder","setOrderBy","selected","setSelected","Paper","Typography","component","Table","aria-labelledby","size","aria-label","numSelected","length","onSelectAllClick","target","checked","newSelecteds","n","name","rowCount","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","slice","handleClick","role","aria-checked","tabIndex","kph","kills","cqc","timeplayed","rev","noalert","basejumps","App","state","this","fetchData","data","mang","profiles","d","console","log","stats","profileId","gs","p","value","Number","stealth","window","setState","m","process","fetch","then","res","json","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.19bcfc22.chunk.js","sourcesContent":["import React from 'react';\nimport {  makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\nexport default function EnhancedTable({ rows }) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('kph');\n  const [selected, setSelected] = React.useState([]);\n  \n\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Typography component=\"h1\">Wildlands</Typography>\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell component=\"th\" id={labelId} >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.kph}</TableCell>\n                      <TableCell align=\"right\">{row.kills}</TableCell>\n                      <TableCell align=\"right\">{row.cqc}</TableCell>\n                      <TableCell align=\"right\">{row.timeplayed}</TableCell>\n                      <TableCell align=\"right\">{row.rev}</TableCell>\n                      <TableCell align=\"right\">{row.noalert}</TableCell>\n                      <TableCell align=\"right\">{row.basejumps}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              \n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n      \n    </div>\n  );\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\n  { id: 'kph', numeric: true, disablePadding: false, label: 'Kph' },\n  { id: 'kills', numeric: true, disablePadding: false, label: 'Kills' },\n  { id: 'cqc', numeric: true, disablePadding: false, label: 'Cqc' },\n  { id: 'timeplayed', numeric: true, disablePadding: false, label: 'Timeplayed' },  \n  { id: 'revives', numeric: true, disablePadding: false, label: 'Revives' },\n  { id: 'noalert', numeric: true, disablePadding: false, label: 'Noalert missions' },\n  { id: 'basejumps', numeric: true, disablePadding: false, label: 'Basejump count' },\n];\n","import React from 'react';\nimport Table from './Table';\nimport './App.css';\n\nconst idToName = id => {\n  const ids = {\n    '88cd2ba8-86ef-49db-9664-b672a6c36519': 'st4rbr34k',\n    'c6f91dbf-4414-48b9-a9ac-a37d5cf8a2ab': 'BBB',\n    '87d2039c-5822-4284-8ac6-37fe3f1a2277': 'Oleeeeeman',\n    '16c30c5f-4e97-455b-8123-3e6743bda427': 'Teh viickee'\n  };\n\n  return ids[id]\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: []\n    }\n  }\n\n  async componentDidMount() {\n    const data = await this.fetchData()\n\n    const mang = data.profiles.map(d => {\n      console.log(d.stats)\n      return {\n        name: idToName(d.profileId),\n        profileId: d.profileId,\n        ...d.stats\n      }\n    })\n      .map(d => {\n        const gs = (p, key) => p[key].value\n        const kills = Number(gs(d, 'KilledEnemiesCount'))\n        const timeplayed =  gs(d, 'SoloPlaytime')/3600 + gs(d, 'CoopPlaytime') / 3600\n        const kph = kills / timeplayed\n        const cqc = Number(gs(d, 'KillWithCQCCount'))\n        const noalert = Number(gs(d, 'CompletedMissionWithNoAlertCount'))\n        const rev = gs(d, 'RevivedTeammateCount')\n        const stealth = Number(gs(d, 'StealthKillPercentage'))\n        const basejumps = Number(gs(d, 'Basejumpcountcommunautary'))\n  \n        return {\n          name: d.name, \n          kph,\n          timeplayed: Number(timeplayed),\n          kills,\n          cqc,\n          rev: Number(rev),\n          noalert: Number(noalert),\n          stealth,\n          basejumps,\n        }\n      })\n\n    window.state = mang\n  \n  this.setState({\n    rows: mang.map(m => ({ ...m}))\n  })\n  \n  }\n\n  fetchData() {\n    console.log(`${process.env.PUBLIC_URL}/olof.json`)\n    return fetch(`./olof.json`).then(res => res.json())\n  }\n\n  render() {\n    const { rows } = this.state\n    return (\n      <div className=\"App\">\n        {rows.length > 1 && (\n          <Table rows={rows} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}